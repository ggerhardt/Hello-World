openapi: 3.0.1
info:
  title: Catálogo de Dados Abertos de Instituições Financeiras
  description: |
    Esta especificação define o formato da lista dos conjuntos de Dados Abertos a disponibilizados pelas IF, conforme definido pelo Banco Central do Brasil, assim como dados de contato e algumas informações básicas sobre cada conjunto.

    # Introdução
    O Banco Central passou a definir que certas informações, classificadas como de interesse público, passem a ser disponibilizadas diretamente pelas instituições financeiras em formato aberto e padronizado. Cada um desses conjuntos de dados, uma vez disponíveis, será listados neste Catálogo de Dados Abertos desta IF.
    
    # Especificação OpenAPI
    Como forma de descrever uma estrutura de dados padronizada, utilizamos o padrão [OpenAPI](https://github.com/OAI/OpenAPI-Specification). Com ele podemos definir caminhos, parâmetros e [schemas](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schema-object) a serem retornados por esses caminhos.
    
    Um dos objetivos na iniciativa é que ela agregue valor à população, com o menor custo de observância possível para as IFs. Com isso em mente, as especificações geradas serão simples o bastante para que possam ser atendidas simplesmente com a disponibilização de arquivos nos portais das instituições ou pela implementação de APIs.    
    
    # Autenticação

    As informações disponibilizadas baseadas nesta especificação não devem possuir nenhum tipo de autenticação.
    

    <SecurityDefinitions />
  version: 0.1.2
  contact:
    email: "apiteam??@bcb.gov.br"
  license:
    name: "Open Database License (ODbL)"
    url: "http://opendefinition.org/licenses/odc-odbl/"
paths:
  /catalogo:
    get:
      operationId: buscarCatalogo
      description: "Retorna informações sobre a instituição e sobre os conjuntos de\
        \ dados publicados como Dados Abertos.\n\nAlgumas informações são opcionais"
      responses:
        200:
          description: Resposta bem sucedida
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/catalogo'
              examples:
                Exemplo com parâmetros atualizados no catálogo:
                  $ref: '#/components/examples/example1'  
                Exemplo com parâmetros vindos de um recurso externo:
                  $ref:  '#/components/examples/example2'
      x-code-samples:
        - lang: 'Curl'
          source: |		
            curl -X GET "https://www.bancoxyz.com.br/dadosabertos/catalogo" -H "accept: application/json:"		
        - lang: 'Javascript - Node'
          source: |
            var request = require("request");

            var options = {
              method: 'GET',
              url: 'https://www.bancoxyz.com.br/dadosabertos/catalogo',
              headers: 
              {   'cache-control': 'no-cache'
              } 
            };
            request(options, function (error, response, body) {
              if (error) throw new Error(error);
              console.log(body);
            });		

        - lang: 'Javascript - Ajax'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://www.bancoxyz.com.br/dadosabertos/catalogo",
              "method": "GET",
              "headers": {
                "content-type": "application/json",
                "cache-control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: 'Python'
          source: |
            import requests
            url = "https://www.bancoxyz.com.br/dadosabertos/catalogo"
            headers = {
              'content-type': "application/json",
              'cache-control': "no-cache"
              }
            response = requests.request("GET", url, headers=headers)
            print(response.text)
        - lang: 'Java'
          source: |
            HttpResponse response = Unirest.get("https://www.bancoxyz.com.br/dadosabertos/catalogo")
            .header("cache-control", "no-cache")
            .asString();                  
components:
  schemas:
    catalogo:
      type: object
      title: Catálogo de conjuntos de dados abertos
      description: Catálogo com informações dos conjuntos de dados abertos publicados pela instituição financeira.
      required:
        - cnpj
        - nome
        - dataUltimaAtualizacao
        - contatoArea
        - contatoEmail
        - conjuntos
      properties:
        cnpj:
          type: string
          title: CNPJ
          description: 'codigo CNPJ de 8 dígitos, formatado.'
          example: 01.010.101
          pattern: '^[0-9]{2}.[0-9]{3}.[0-9]{3}$'
        nome:
          type: string
          title: Nome da IF
          description: Nome da Instituição Financeira.
          example: Banco Xyz
          maxLength: 50
        dataUltimaAtualizacao:
          type: string
          format: date
          title: Data da última atualização
          description: 'Data da última atualização destas informações, no formato yyyy-mm-dd.'
          example: '2019-06-11'
        contatoArea:
          type: string
          title: Área de contato
          description: Nome da área de contato para tratar problemas nos dados.
          example: Ouvidoria
          maxLength: 50
        contatoEmail:
          type: string
          format: email
          title: E-mail de contato
          description: E-mail da área de contato para tratar problemas nos dados.
          example: ouvid@bancoxyz.com.br
        conjuntos:
          type: array
          title: Conjuntos de dados
          description: Lista de conjuntos de dados disponibilizados.
          items:
            title: Item do catálogo
            type: object
            description: Cada conjunto de dado faz referência a uma especificação implementada e indica onde ela está disponibilizada.
            required:
              - ref
              - nome
              - urlBase
              - urlVisualizacao
              - situacao
              - recursos
            properties:
              ref:
                type: string
                format: uri
                title: Referência à especificação da API 
                description: Endereço html da especificação OpenAPI no site do Banco Central
                example: 'https://www.bcb.gov.br/dadosabertos/apis/pilar3/1.0.0/especificacao'
                maxLength: 150
              nome:
                type: string
                title: Nome da API
                description: Nome da API, conforme definido na especificação.
                example: Basiléia - PillarIII
                maxLength: 100
              urlBase:
                type: string
                format: uri
                title: URL de base
                description: Indica o caminho base da implementação da API na IF.
                example: 'http://dadosabertos.bancoxyz.com.br/pillar/1.0/'
              urlVisualizacao:
                type: string
                format: uri
                title: URL de visualização
                description: Url que aponta para visualização dos dados no site da instituição.
                example: 'https://bancoxyz.com.br/ConsultaPillarIII'
              situacao:
                type: string
                title: Situação da implementação
                description: Indica o estado do desenvolvimento da API. Somente APIs marcadas como em 'Produção' são consideradas como publicadas.
                enum:
                  - Desenvolvimento
                  - Homologação
                  - Produção
                  - Descontinuada
                example: Produção
                maxLength: 20
              recursos:
                type: array
                title: Lista de recursos publicados
                description: Lista com os recursos implementados e publicados pela instituição
                items:
                  type: object
                  title: Recurso da API
                  description: Recurso implementado pela IF.
                  required:
                    - caminhoRecurso
                  properties:
                    nome:
                      type: string
                      title: Nome do Recurso 
                      description: Nome do recurso, conforme definido na especificação
                      example: 'semestre'
                      maxLength: 30
                    caminhoRecurso:
                      type: string
                      format: uri
                      title: Caminho do recurso
                      description: Caminho relativo do recurso implementado, conforme definido na especificação
                      example: '/KM1/{semestre}'
                      maxLength: 100
                    parametros:
                      type: object
                      title: Parâmetro e valores implementados
                      description: Nome do parâmetro e lista com os valores implementados pela instituição, que geram recursos válidos, conforme definido na especificação
                      properties:
                        nome:
                          type: string
                          title: Nome do parâmetro 
                          description: Nome do parâmetro existente no recurso, conforme definido na especificação
                          example: 'semestre'
                          maxLength: 30
                        valores:
                          oneOf:
                            - type: array
                              title: Lista de parâmetros implementados
                              description: Lista com os valores de parâmetros implementados pela instituição e que geram recursos válidos, conforme definido na especificação
                              items:
                                type: string
                                title: Parâmetro válido publicado
                                description: Parâmetro que gere recurso válido, conforme definido na especificação.
                                example: '201901'
                                maxLength: 50
                            - type: string
                              format: uri
                              title: URL de parâmetros  implementação
                              description: |
                                URL definida pela instituição, que retorna lista com os parâmetros implementados (que geram recursos válidos), conforme definido na especificação. A url deve retornar um json simples com array de valores em texto disponíveis. Ex:['2018','2019','2020']
                              example: '/KM1/PeriodosDisponiveis'
                              maxLength: 100
                    periodicidade:
                      type: string
                      title: Periodicidade
                      description: Informativo. Se houver periodicidade definida, indica qual é.
                      example: semestral
                      maxLength: 50
              contatoArea:
                type: string
                title: Área de Contato API
                description: Nome da área de contato para tratar problemas nos dados específicos deste conjunto de dados. Este valor é opcional e deve ser preenchido se existir um contato de negócios específico para este conjunto.
                example: Financeiro
                maxLength: 50
              contatoEmail:
                type: string
                format: email
                title: E-mail de contato API
                description: E-mail da área de contato para tratar problemas nos dados específicos deste conjunto de dados. Este valor é opcional e deve ser preenchido se existir um contato de negócios específico para este conjunto.
                example: pillarIII@bancoxyz.com
  examples:
    example1:
      value:
        cnpj: 90.909.090
        nome: Banco ZZZ
        dataUltimaAtualizacao: '2019-08-11'
        contatoArea: informacoes clientes
        contatoEmail: clientInfo@bancozzz.com.br
        conjuntos:
          - ref: 'https://www.bcb.gov.br/dadosabertos/apis/pilar3/1.0.0/especificacao'
            nome: Basiléia - PillarIII
            urlBase: 'http://www.bancozzz.com.br/dadosabertos/1.0/'
            urlVisualizacao: 'https://bancozzz.com.br/DadosAbertos/Pilar3'
            situacao: Produção
            recursos:
              - nome: KM1 - Informações quantitativas sobre os requerimentos prudenciais
                caminhoRecurso: '/KM1/{semestre}'
                parametros:
                  nome: semestre
                  valores: 
                    - '2019-4'
                    - '2020-1'
            periodicidade: semestral
            contatoArea: Financeiro
            contatoEmail: pillarIII@bancoxyz.com
    example2:
      value:
        cnpj: 01.010.101
        nome: Banco Xyz
        dataUltimaAtualizacao: '2019-06-11'
        contatoArea: Ouvidoria
        contatoEmail: ouvid@bancoxyz.com.br
        conjuntos:
          - ref: 'https://www.bcb.gov.br/dadosabertos/apis/pilar3/1.0.0/especificacao'
            nome: Basiléia - PillarIII
            urlBase: 'http://dadosabertos.bancoxyz.com.br/pillar/'
            urlVisualizacao: 'https://bancoxyz.com.br/ConsultaPilarIII'
            situacao: Produção
            recursos:
              - nome: LIA - Explicar as diferenças entre os valores contábeis tais como reportados nas demonstrações financeiras (tabela LI1) e as exposições consideradas para fins da regulamentação prudencial (tabela LI2).
                caminhoRecurso: '/lia/{ano}'
                parametros:
                  nome: ano
                  valores: 'http://dadosabertos.bancoxyz.com.br/pillar/periodos/lia.json'
            periodicidade: anual      
            contatoArea: Financeiro
            contatoEmail: pillarIII@bancoxyz.com
